<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Github | 忐忑の博客</title><link>https://twbhub.top/tags/github/</link><atom:link href="https://twbhub.top/tags/github/index.xml" rel="self" type="application/rss+xml"/><description>Github</description><generator>Wowchemy (https://wowchemy.com)</generator><language>zh-Hans</language><copyright>[![忐忑的博客](https://img.shields.io/badge/©-2020%20%2D-%202025_忐忑-yellow)](/authors/admin/) [![忐忑的博客](https://img.shields.io/github/tag/twbworld/twbworld.GitHub.io?logo=github)](https://github.com/twbworld/twbworld.GitHub.io) [![Hugo](https://img.shields.io/badge/powered-hugo-ff4088?logo=hugo)](https://gohugo.io/) [![wowchemy](https://img.shields.io/badge/theme-wowchemy-00d1b2)](https://wowchemy.com/)</copyright><lastBuildDate>Sat, 13 Mar 2021 14:00:00 +0800</lastBuildDate><image><url>https://twbhub.top/media/avatar.jpg</url><title>Github</title><link>https://twbhub.top/tags/github/</link></image><item><title>使用Github Actions发布docker镜像到仓库</title><link>https://twbhub.top/post/github-actions_publish_images/</link><pubDate>Sat, 13 Mar 2021 14:00:00 +0800</pubDate><guid>https://twbhub.top/post/github-actions_publish_images/</guid><description>&lt;p>&lt;strong>!!!现在官方已出教程了, 请到&lt;a href="https://docs.github.com/zh/actions/publishing-packages/publishing-docker-images" target="_blank" rel="noopener">github-action官网&lt;/a>学习; 此过期文章只作为参考!!!&lt;/strong>&lt;/p>
&lt;h2 id="前文">前文&lt;/h2>
&lt;p>关于发布Docker镜像到仓库, 思路有不少, 比如:&lt;/p>
&lt;ol>
&lt;li>本地生成Docker镜像后, 使用 &lt;code>docker login&lt;/code> 登录, 然后再 &lt;code>docker push&lt;/code> 发布到仓库(Docker Hub等)&lt;/li>
&lt;li>Docker仓库平台(Docker Hub等) 关联 &lt;code>Github项目&lt;/code> , &lt;code>git push&lt;/code> 后, 仓库平台会获取 &lt;code>Github项目&lt;/code> 下的 &lt;code>Dockerfile&lt;/code> 等相关文件, 自动构建Docker镜像&lt;/li>
&lt;/ol>
&lt;p>本文要讲的是第3种思路, 利用 &lt;code>Github Actions&lt;/code> 自动化构建和发布, 与 &lt;code>Github&lt;/code> 更高度的结合&lt;/p>
&lt;h2 id="仓库平台区别">仓库平台区别&lt;/h2>
&lt;p>&lt;code>Docker Hub&lt;/code> 再熟悉不过, 它是Docker的官方平台, 不作多介绍&lt;/p>
&lt;p>对于 &lt;code>Github&lt;/code> 下却有两个发布Docker镜像的平台, &lt;code>ghcr.io&lt;/code> 和 &lt;code>docker.pkg.github.com&lt;/code>&lt;/p>
&lt;h4 id="区别1">区别1&lt;/h4>
&lt;p>前者发布的镜像在 &lt;code>用户&lt;/code> 之下, 地址格式 : &lt;code>https://ghcr.io/[用户名]/[镜像名]&lt;/code>&lt;/p>
&lt;p>后者发布的镜像在 &lt;code>项目&lt;/code> 之下, 地址格式 : &lt;code>https://docker.pkg.github.com/[用户名]/[项目名]/[镜像名]&lt;/code>&lt;/p>
&lt;h4 id="区别2">区别2&lt;/h4>
&lt;p>前者下的镜像可选择公开, 任何人都可 &lt;code>docker pull&lt;/code>&lt;/p>
&lt;p>后者却只能用户授权才能 &lt;code>docker pull&lt;/code>&lt;/p>
&lt;p>&lt;em>&lt;strong>本文重点讲如何发布到 &lt;code>ghcr.io&lt;/code>&lt;/strong>&lt;/em>&lt;/p>
&lt;h2 id="发布到ghcrio">发布到ghcr.io&lt;/h2>
&lt;h3 id="步骤一">步骤一&lt;/h3>
&lt;p>想要在 &lt;code>GitHub&lt;/code> 使用 &lt;code>ghcr.io&lt;/code> , 首先要 &lt;a href="https://docs.github.com/cn/packages/guides/enabling-improved-container-support" target="_blank" rel="noopener">启用改进的容器支持&lt;/a>&lt;/p>
&lt;h3 id="步骤二可选">步骤二(可选)&lt;/h3>
&lt;p>添加一些机密数据到您的GitHub项目 &lt;code>secrets&lt;/code>(或Variables) 下 ; 找到项目下 &lt;code>Setting &amp;gt; secrets&lt;/code> , 右上角点击 &lt;code>New repository secret&lt;/code> , 如图
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20210313153743.png" alt="">&lt;/p>
&lt;p>用于下一步编写的文件,使用 &lt;code>${{ secrets.xxx }}&lt;/code> 或 &lt;code>${{ vars.xxx }}&lt;/code>&lt;/p>
&lt;h3 id="步骤三">步骤三&lt;/h3>
&lt;p>如何使用 &lt;code>GitHub-Actions&lt;/code> 在此不过多简释, 直接贴出代码 :&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">ci&lt;/span>
&lt;span style="color:#f92672">on&lt;/span>:
&lt;span style="color:#f92672">workflow_dispatch&lt;/span>: &lt;span style="color:#75715e">#github页面手动触发&lt;/span>
&lt;span style="color:#f92672">push&lt;/span>:
&lt;span style="color:#f92672">tags&lt;/span>:
- &lt;span style="color:#e6db74">&amp;#34;v*.*&amp;#34;&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">IMAGE_NAME&lt;/span>: &lt;span style="color:#ae81ff">test&lt;/span> &lt;span style="color:#75715e">#这是您的镜像名&lt;/span>
&lt;span style="color:#f92672">jobs&lt;/span>:
&lt;span style="color:#f92672">get-tags&lt;/span>:
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">TZ&lt;/span>: &lt;span style="color:#ae81ff">Asia/Shanghai&lt;/span>
&lt;span style="color:#f92672">outputs&lt;/span>:
&lt;span style="color:#f92672">tags&lt;/span>: &lt;span style="color:#ae81ff">${{ steps.output-id.outputs.v }}&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
- &lt;span style="color:#f92672">id&lt;/span>: &lt;span style="color:#ae81ff">output-id&lt;/span>
&lt;span style="color:#f92672">run&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> VERSION=edge
&lt;/span>&lt;span style="color:#e6db74"> if [[ $GITHUB_REF == refs/tags/* ]]; then
&lt;/span>&lt;span style="color:#e6db74"> VERSION=${GITHUB_REF#refs/tags/v}
&lt;/span>&lt;span style="color:#e6db74"> fi
&lt;/span>&lt;span style="color:#e6db74"> echo &amp;#34;v=${VERSION}&amp;#34; &amp;gt;&amp;gt; $GITHUB_OUTPUT&lt;/span>
&lt;span style="color:#f92672">push-ghcr&lt;/span>:
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">TZ&lt;/span>: &lt;span style="color:#ae81ff">Asia/Shanghai&lt;/span>
&lt;span style="color:#f92672">REGISTRY&lt;/span>: &lt;span style="color:#ae81ff">ghcr.io&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Login&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/login-action@v1&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">registry&lt;/span>: &lt;span style="color:#ae81ff">${{ env.REGISTRY }}&lt;/span>
&lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">${{ github.repository_owner }}&lt;/span>
&lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}&lt;/span> &lt;span style="color:#75715e">#此值是github专为Action提供的,这就是上一步没有手动添加的原因&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Build &amp;amp;&amp;amp; Push&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/build-push-action@v2&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">.&lt;/span>
&lt;span style="color:#f92672">file&lt;/span>: &lt;span style="color:#ae81ff">./Dockerfile&lt;/span>
&lt;span style="color:#f92672">push&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#f92672">tags&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
&lt;/span>&lt;span style="color:#e6db74"> ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;a href="https://github.com/metcalfc/docker-action-examples/blob/main/.github/workflows/release.yml" target="_blank" rel="noopener">借鉴代码&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>如图, &lt;code>GitHub-Actions&lt;/code> 运行成功后, 在用户首页下的 &lt;code>Packages&lt;/code> 模块下, 新增了一个 &lt;code>Packages&lt;/code>
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20210313162701.png" alt="">
但是, 可看到 &lt;code>Private&lt;/code> 标签, 也就是说, 这个Docker镜像默认不公开的 ; 如需要公开, 请往下看&lt;/p>
&lt;h3 id="步骤四">步骤四&lt;/h3>
&lt;p>公开 &lt;code>Packages&lt;/code> 下的Docker镜像 ; 进入需要公开的镜像后, 点击右上角 &lt;code>Package Settings&lt;/code> , 进入配置页面
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20210313163101.png" alt="">
拉到低, 点击 &lt;code>Change visibility&lt;/code> , 就可设置为公开 ;
在任何地方, 都可以下载镜像: &lt;code>docker pull ghcr.io/[用户名]/[镜像名]:[标签]&lt;/code>
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20210313163237.png" alt="">&lt;/p>
&lt;h3 id="步骤五">步骤五&lt;/h3>
&lt;p>虽然这个镜像是通过您的GitHub项目发布的, 但默认是不会关联到对应GitHub项目的 ;
在上文 &lt;a href="#%e4%bb%93%e5%ba%93%e5%b9%b3%e5%8f%b0%e5%8c%ba%e5%88%ab">仓库平台区别&lt;/a> 已经知道, &lt;code>ghcr.io&lt;/code> 下的镜像是对应账号, 而不是 &lt;code>项目&lt;/code> 的 ;
如果需要将该镜像关联到对应项目, 也很简单 :
如图 , 进入该镜像的页面, 在页面下就可以看到 &lt;code>Connect Repository&lt;/code> 按钮, 点击关联对应的项目 ; 项目下的 &lt;code>README.md&lt;/code> 也会加载进来
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20210313164825.png" alt="">&lt;/p>
&lt;p>来到对应的GitHub项目下, 也可以看到关联的Docker镜像, 如图 :
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20210313165559.png" alt="">&lt;/p>
&lt;h2 id="发布到其他仓库">发布到其他仓库&lt;/h2>
&lt;p>给出全部代码, 同时发布到 &lt;code>Docker Hub&lt;/code> / &lt;code>ghcr.io&lt;/code> / &lt;code>docker.pkg.github.com&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">ci&lt;/span>
&lt;span style="color:#f92672">on&lt;/span>:
&lt;span style="color:#f92672">workflow_dispatch&lt;/span>: &lt;span style="color:#75715e">#github页面手动触发&lt;/span>
&lt;span style="color:#f92672">push&lt;/span>:
&lt;span style="color:#f92672">tags&lt;/span>:
- &lt;span style="color:#e6db74">&amp;#34;v*.*&amp;#34;&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">IMAGE_NAME&lt;/span>: &lt;span style="color:#ae81ff">test&lt;/span> &lt;span style="color:#75715e">#这是您的镜像名&lt;/span>
&lt;span style="color:#f92672">jobs&lt;/span>:
&lt;span style="color:#f92672">get-tags&lt;/span>:
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">TZ&lt;/span>: &lt;span style="color:#ae81ff">Asia/Shanghai&lt;/span>
&lt;span style="color:#f92672">outputs&lt;/span>:
&lt;span style="color:#f92672">tags&lt;/span>: &lt;span style="color:#ae81ff">${{ steps.output-id.outputs.v }}&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
- &lt;span style="color:#f92672">id&lt;/span>: &lt;span style="color:#ae81ff">output-id&lt;/span>
&lt;span style="color:#f92672">run&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> VERSION=edge
&lt;/span>&lt;span style="color:#e6db74"> if [[ $GITHUB_REF == refs/tags/* ]]; then
&lt;/span>&lt;span style="color:#e6db74"> VERSION=${GITHUB_REF#refs/tags/v}
&lt;/span>&lt;span style="color:#e6db74"> fi
&lt;/span>&lt;span style="color:#e6db74"> echo &amp;#34;v=${VERSION}&amp;#34; &amp;gt;&amp;gt; $GITHUB_OUTPUT&lt;/span>
&lt;span style="color:#f92672">push-ghcr&lt;/span>:
&lt;span style="color:#f92672">needs&lt;/span>: &lt;span style="color:#ae81ff">get-tags&lt;/span>
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">TZ&lt;/span>: &lt;span style="color:#ae81ff">Asia/Shanghai&lt;/span>
&lt;span style="color:#f92672">REGISTRY&lt;/span>: &lt;span style="color:#ae81ff">ghcr.io&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Login&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/login-action@v1&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">registry&lt;/span>: &lt;span style="color:#ae81ff">${{ env.REGISTRY }}&lt;/span>
&lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">${{ github.repository_owner }}&lt;/span>
&lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Build &amp;amp;&amp;amp; Push&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/build-push-action@v2&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">.&lt;/span>
&lt;span style="color:#f92672">file&lt;/span>: &lt;span style="color:#ae81ff">./Dockerfile&lt;/span>
&lt;span style="color:#f92672">push&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#f92672">tags&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
&lt;/span>&lt;span style="color:#e6db74"> ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest&lt;/span>
&lt;span style="color:#f92672">push-docker-hub&lt;/span>:
&lt;span style="color:#f92672">needs&lt;/span>: &lt;span style="color:#ae81ff">get-tags&lt;/span>
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">TZ&lt;/span>: &lt;span style="color:#ae81ff">Asia/Shanghai&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Login&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/login-action@v1&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.DOCKERHUB_USERNAME }}&lt;/span>
&lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.DOCKERHUB_TOKEN }}&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Build &amp;amp;&amp;amp; Push&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/build-push-action@v2&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">.&lt;/span>
&lt;span style="color:#f92672">file&lt;/span>: &lt;span style="color:#ae81ff">./Dockerfile&lt;/span>
&lt;span style="color:#f92672">push&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#f92672">tags&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
&lt;/span>&lt;span style="color:#e6db74"> ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest&lt;/span>
&lt;span style="color:#f92672">push-docker-pkg-github&lt;/span>:
&lt;span style="color:#f92672">needs&lt;/span>: &lt;span style="color:#ae81ff">get-tags&lt;/span>
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">env&lt;/span>:
&lt;span style="color:#f92672">REGISTRY&lt;/span>: &lt;span style="color:#ae81ff">docker.pkg.github.com&lt;/span>
&lt;span style="color:#f92672">TZ&lt;/span>: &lt;span style="color:#ae81ff">Asia/Shanghai&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/checkout@v3&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Login&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/login-action@v1&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">registry&lt;/span>: &lt;span style="color:#ae81ff">${{ env.REGISTRY }}&lt;/span>
&lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">${{ github.actor }}&lt;/span>
&lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.GITHUB_TOKEN }}&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Build &amp;amp;&amp;amp; Push&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">docker/build-push-action@v2&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">context&lt;/span>: &lt;span style="color:#ae81ff">.&lt;/span>
&lt;span style="color:#f92672">file&lt;/span>: &lt;span style="color:#ae81ff">./Dockerfile&lt;/span>
&lt;span style="color:#f92672">push&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#f92672">tags&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:${{ needs.get-tags.outputs.tags }}
&lt;/span>&lt;span style="color:#e6db74"> ${{ env.REGISTRY }}/${{ github.repository }}/${{ env.IMAGE_NAME }}:latest&lt;/span>
- &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Delete Package&lt;/span>
&lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">actions/delete-package-versions@v1&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">package-name&lt;/span>: &lt;span style="color:#ae81ff">${{ env.IMAGE_NAME }}&lt;/span>
&lt;span style="color:#f92672">num-old-versions-to-delete&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e">#删除最旧的一个包&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>GitHub-Actions 真香 !&lt;/p>
&lt;/blockquote></description></item><item><title>GitHub Actions无法触发</title><link>https://twbhub.top/post/github_actions_invalid/</link><pubDate>Sat, 23 Jan 2021 19:00:00 +0800</pubDate><guid>https://twbhub.top/post/github_actions_invalid/</guid><description>&lt;h2 id="问题">问题&lt;/h2>
&lt;blockquote>
&lt;p>刚刚接触github actions实现CI/CD, 遇到了一个yml文件触发失败的问题&lt;/p>
&lt;/blockquote>
&lt;p>yml文件配置如下 :&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">ci-test&lt;/span>
&lt;span style="color:#f92672">on&lt;/span>:
&lt;span style="color:#f92672">pull_request&lt;/span>:
&lt;span style="color:#f92672">branches&lt;/span>:
- &lt;span style="color:#ae81ff">dev&lt;/span>
&lt;span style="color:#f92672">jobs&lt;/span>:
&lt;span style="color:#f92672">ssh-login&lt;/span>:
&lt;span style="color:#f92672">runs-on&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-latest&lt;/span>
&lt;span style="color:#f92672">steps&lt;/span>:
- &lt;span style="color:#f92672">uses&lt;/span>: &lt;span style="color:#ae81ff">appleboy/ssh-action@master&lt;/span>
&lt;span style="color:#f92672">with&lt;/span>:
&lt;span style="color:#f92672">host&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.HOST }}&lt;/span>
&lt;span style="color:#f92672">username&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.USERNAME }}&lt;/span>
&lt;span style="color:#f92672">key&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.KEY }}&lt;/span>
&lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">${{ secrets.PORT }}&lt;/span>
&lt;span style="color:#f92672">script&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> &lt;/span> &lt;span style="color:#ae81ff">ls ./&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当使用 &lt;code>git pull&lt;/code> 时, 却没有触发该yml文件(在github项目的Actions的选项卡下不存在任务)
但是,当把触发条件 &lt;code>pull_request&lt;/code> 改成 &lt;code>push&lt;/code> , 再push到Github 却意外的成功了触发了Actions&lt;/p>
&lt;h2 id="解决">解决&lt;/h2>
&lt;p>最后多次尝试,才发现问题 :&lt;/p>
&lt;p>&lt;em>&lt;strong>&lt;code>pull_request&lt;/code> 触发条件只能在默认分支上使用, 也就是说我的配置项 &lt;code>branches&lt;/code> 下的 &lt;code>dev&lt;/code> 不是项目的默认分支, 所以触发Actions失败, 除此之外还有 &lt;code>workflow_run&lt;/code> | &lt;code>issue&lt;/code>&lt;/strong>&lt;/em>&lt;/p>
&lt;blockquote>
&lt;p>都怪没认真看&lt;a href="https://docs.github.com/cn/actions/reference/events-that-trigger-workflows" target="_blank" rel="noopener">文档&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>另外再做个笔记 :
如果 &lt;code>workflows&lt;/code> 目录下有多个yml, GitHub-Actions默认是并行触发的, 如果想实现按顺序触发, 请使用 &lt;a href="https://docs.github.com/cn/actions/reference/events-that-trigger-workflows#workflow_run" target="_blank" rel="noopener">&lt;code>workflow_run&lt;/code>&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>GitHub-Actions 真香 !&lt;/p>
&lt;/blockquote></description></item><item><title>搭建博客的准备</title><link>https://twbhub.top/post/blog_ready/</link><pubDate>Sun, 17 May 2020 19:06:47 +0800</pubDate><guid>https://twbhub.top/post/blog_ready/</guid><description>&lt;blockquote>
&lt;p>最近想建立自己的博客网站,便于在开发过程中写一些笔记;
但进入了未知领域,面临了怎么抉择的问题; 毕竟谁也不情愿一开始就因选择了自己不适合的,最后半途而悔&lt;/p>
&lt;/blockquote>
&lt;h2 id="平台的选择">平台的选择&lt;/h2>
&lt;p>进入我的备选名单的有:&lt;/p>
&lt;ul>
&lt;li>CSDN&lt;/li>
&lt;li>博客园&lt;/li>
&lt;li>WordPress&lt;/li>
&lt;li>Github Pages&lt;/li>
&lt;li>知乎&lt;/li>
&lt;/ul>
&lt;p>先讲结论,我最终选择了Github Pages&lt;/p>
&lt;h3 id="wordpress">WordPress&lt;/h3>
&lt;p>优点:&lt;/p>
&lt;ul>
&lt;li>自己搭建的博客,自由度非常高&lt;/li>
&lt;li>历经多年,插件丰富&lt;/li>
&lt;li>对phper友好PHP&lt;/li>
&lt;/ul>
&lt;p>缺点:&lt;/p>
&lt;ul>
&lt;li>浪费大量 时间 / 精力 / 金钱 去维护网站(服务器的维护,域名,SEO,还有服务器安全方面的考虑,等等)&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>时间宝贵,老子只想静静的写文章,不愿在无意义的事上浪费有限的时间&lt;/p>
&lt;/blockquote>
&lt;h3 id="知乎">知乎&lt;/h3>
&lt;p>优点:&lt;/p>
&lt;ul>
&lt;li>前端界面较前卫&lt;/li>
&lt;li>平台的文章质量也很高,也有大量的程序猿聚集在此&lt;/li>
&lt;li>平台流量大,本人平时也喜欢逛知乎,有些许个人感情&lt;/li>
&lt;/ul>
&lt;p>缺点:&lt;/p>
&lt;ul>
&lt;li>平台信息有点杂,文章五花八门,而且这几年很多在知乎上带节奏,以及一些搞营销的,比较反感&lt;/li>
&lt;li>知乎对MarkDown的支持不友好&lt;/li>
&lt;/ul>
&lt;h3 id="csdn博客园">CSDN/博客园&lt;/h3>
&lt;p>优点:&lt;/p>
&lt;ul>
&lt;li>CSDN/博客园 的搜索引擎优化是做的不错&lt;/li>
&lt;li>程序猿社区,专注于技术博客,不像知乎给人的感觉很杂&lt;/li>
&lt;/ul>
&lt;p>缺点:&lt;/p>
&lt;ul>
&lt;li>平台界面老旧(点名批评博客园,强迫症看着难受)&lt;/li>
&lt;li>CSDN的下载文件有收费模式&lt;/li>
&lt;li>内容限制于平台,插广告都困难&lt;/li>
&lt;/ul>
&lt;h3 id="github-pages">Github Pages&lt;/h3>
&lt;p>优点:&lt;/p>
&lt;ul>
&lt;li>使用Git管理&lt;/li>
&lt;li>静态网站,比较好维护&lt;/li>
&lt;li>搜索引擎优化,服务器的维护等等这些,全权交给github好了,不需要浪费过多的精力&lt;/li>
&lt;li>自由度较高,可以使用各种主题和插件,没有平台限制,插广告放个&amp;quot;看板娘&amp;quot;啥的&lt;/li>
&lt;li>可使用自己的域名,且免费支持https&lt;/li>
&lt;li>写博客使用MarkDown,就要有图床;可使用Github仓库作为图床,托管图片和静态资源&lt;/li>
&lt;li>如果搭配GitHub Actions的免费CI/CD服务(即push代码即可实现部署代码等工作), 那么 Git仓库 + 图床 + CI/CD 都在GitHub的生态下, 体验一级棒&lt;/li>
&lt;li>Github是未来[呐喊], Github是未来[呐喊], Github是未来[呐喊]&lt;/li>
&lt;/ul>
&lt;p>缺点:&lt;/p>
&lt;ul>
&lt;li>gh-pages屏蔽了百度蜘蛛,用百度搜索引擎无法搜索出Github Pages的文章(但另一方面,百度相比Google的搜索质量差太多了;有&amp;quot;条件&amp;quot;的程序猿都善用Google吧?)解决办法并不是没有,&lt;a href="https://vercel.com/" target="_blank" rel="noopener">zeit.co&lt;/a> 可提供CDN服务&lt;/li>
&lt;/ul>
&lt;hr>
&lt;blockquote>
&lt;p>如果您也决定使用gh-pages搭建博客,那就会面临着一个选择, 博客框架/静态网站生成器 的选择(强迫症又要犯了!)&lt;/p>
&lt;/blockquote>
&lt;h2 id="博客框架的选择">博客框架的选择&lt;/h2>
&lt;blockquote>
&lt;p>我所理解的静态网站生成器: 在生成器框架下写MarkDown文章,使用生成器把MarkDown文章编译成生成HTML&lt;/p>
&lt;/blockquote>
&lt;p>主流选择也就那么几个:&lt;/p>
&lt;ul>
&lt;li>Jekyll&lt;/li>
&lt;li>Hexo&lt;/li>
&lt;li>VuePress&lt;/li>
&lt;li>Hugo&lt;/li>
&lt;/ul>
&lt;p>先讲结论,经一番思想斗争,本人选择了Hugo&lt;/p>
&lt;h3 id="jekyll">Jekyll&lt;/h3>
&lt;p>Jekyll是GitHub创始人使用Ruby写的,同时也是gh-Pages默认的静态网站生成器
但其速度较慢,特别是文章多的时候,特别明显&lt;/p>
&lt;h3 id="hexo">Hexo&lt;/h3>
&lt;p>Hexo是js写的,js的用户群体较大,Hexo中文文档比较齐全,国内获得了较大的使用人群&lt;/p>
&lt;h3 id="vuepress">VuePress&lt;/h3>
&lt;p>较新的静态网站生成器,热度也不低,但同时也不太稳定; 其名可知,对熟悉Vue的同学较为友好,且Vue在交互性上有巨大的优势&lt;/p>
&lt;h3 id="hugo">Hugo&lt;/h3>
&lt;p>优点:&lt;/p>
&lt;ul>
&lt;li>天下武功唯快不破,使用golang开发; 即使应对庞大的文章生成量,速度是用秒来计算的,简直秒杀对手&lt;/li>
&lt;li>&amp;ldquo;Google出品,必属精品&amp;rdquo;,相信Hugo会随着go的影响力在国内越走越远(本人也正有学go的想法)&lt;/li>
&lt;li>一个技巧(专治&amp;quot;选择困难症&amp;quot;),利用了搜索引擎来对比了Hexo和Hugo的搜索热度,Hugo的相关文章数是Hexo的100多倍,全球用户量庞大,Hugo所可选的博客模板也不少
&lt;img src="https://cdn.jsdelivr.net/gh/twbworld/hosting@main/img/20200517212636.png" alt="">&lt;/li>
&lt;/ul>
&lt;p>缺点:&lt;/p>
&lt;ul>
&lt;li>虽然全球用户量庞大,但缺乏中文文档, 国内用户群体少, Hugo的相关中文文章也就少; Hugo会不会是在国内的一支&amp;quot;潜力股&amp;quot; ?&lt;/li>
&lt;/ul></description></item></channel></rss>